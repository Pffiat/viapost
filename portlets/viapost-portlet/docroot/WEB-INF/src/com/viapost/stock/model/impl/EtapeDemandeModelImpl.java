/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.viapost.stock.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.viapost.stock.model.EtapeDemande;
import com.viapost.stock.model.EtapeDemandeModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the EtapeDemande service. Represents a row in the &quot;Viapost_EtapeDemande&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.viapost.stock.model.EtapeDemandeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EtapeDemandeImpl}.
 * </p>
 *
 * @author pif
 * @see EtapeDemandeImpl
 * @see com.viapost.stock.model.EtapeDemande
 * @see com.viapost.stock.model.EtapeDemandeModel
 * @generated
 */
public class EtapeDemandeModelImpl extends BaseModelImpl<EtapeDemande>
	implements EtapeDemandeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a etape demande model instance should use the {@link com.viapost.stock.model.EtapeDemande} interface instead.
	 */
	public static final String TABLE_NAME = "Viapost_EtapeDemande";
	public static final Object[][] TABLE_COLUMNS = {
			{ "etapeId", Types.BIGINT },
			{ "demandeId", Types.BIGINT },
			{ "decription", Types.VARCHAR },
			{ "order_", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table Viapost_EtapeDemande (etapeId LONG not null primary key,demandeId LONG,decription VARCHAR(75) null,order_ LONG)";
	public static final String TABLE_SQL_DROP = "drop table Viapost_EtapeDemande";
	public static final String ORDER_BY_JPQL = " ORDER BY etapeDemande.order ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Viapost_EtapeDemande.order_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.viapost.stock.model.EtapeDemande"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.viapost.stock.model.EtapeDemande"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.viapost.stock.model.EtapeDemande"),
			true);
	public static long DEMANDEID_COLUMN_BITMASK = 1L;
	public static long ORDER_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.viapost.stock.model.EtapeDemande"));

	public EtapeDemandeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _etapeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEtapeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _etapeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EtapeDemande.class;
	}

	@Override
	public String getModelClassName() {
		return EtapeDemande.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("etapeId", getEtapeId());
		attributes.put("demandeId", getDemandeId());
		attributes.put("decription", getDecription());
		attributes.put("order", getOrder());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long etapeId = (Long)attributes.get("etapeId");

		if (etapeId != null) {
			setEtapeId(etapeId);
		}

		Long demandeId = (Long)attributes.get("demandeId");

		if (demandeId != null) {
			setDemandeId(demandeId);
		}

		String decription = (String)attributes.get("decription");

		if (decription != null) {
			setDecription(decription);
		}

		Long order = (Long)attributes.get("order");

		if (order != null) {
			setOrder(order);
		}
	}

	@Override
	public long getEtapeId() {
		return _etapeId;
	}

	@Override
	public void setEtapeId(long etapeId) {
		_etapeId = etapeId;
	}

	@Override
	public long getDemandeId() {
		return _demandeId;
	}

	@Override
	public void setDemandeId(long demandeId) {
		_columnBitmask |= DEMANDEID_COLUMN_BITMASK;

		if (!_setOriginalDemandeId) {
			_setOriginalDemandeId = true;

			_originalDemandeId = _demandeId;
		}

		_demandeId = demandeId;
	}

	public long getOriginalDemandeId() {
		return _originalDemandeId;
	}

	@Override
	public String getDecription() {
		if (_decription == null) {
			return StringPool.BLANK;
		}
		else {
			return _decription;
		}
	}

	@Override
	public void setDecription(String decription) {
		_decription = decription;
	}

	@Override
	public long getOrder() {
		return _order;
	}

	@Override
	public void setOrder(long order) {
		_columnBitmask = -1L;

		_order = order;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			EtapeDemande.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EtapeDemande toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EtapeDemande)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EtapeDemandeImpl etapeDemandeImpl = new EtapeDemandeImpl();

		etapeDemandeImpl.setEtapeId(getEtapeId());
		etapeDemandeImpl.setDemandeId(getDemandeId());
		etapeDemandeImpl.setDecription(getDecription());
		etapeDemandeImpl.setOrder(getOrder());

		etapeDemandeImpl.resetOriginalValues();

		return etapeDemandeImpl;
	}

	@Override
	public int compareTo(EtapeDemande etapeDemande) {
		int value = 0;

		if (getOrder() < etapeDemande.getOrder()) {
			value = -1;
		}
		else if (getOrder() > etapeDemande.getOrder()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EtapeDemande)) {
			return false;
		}

		EtapeDemande etapeDemande = (EtapeDemande)obj;

		long primaryKey = etapeDemande.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EtapeDemandeModelImpl etapeDemandeModelImpl = this;

		etapeDemandeModelImpl._originalDemandeId = etapeDemandeModelImpl._demandeId;

		etapeDemandeModelImpl._setOriginalDemandeId = false;

		etapeDemandeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<EtapeDemande> toCacheModel() {
		EtapeDemandeCacheModel etapeDemandeCacheModel = new EtapeDemandeCacheModel();

		etapeDemandeCacheModel.etapeId = getEtapeId();

		etapeDemandeCacheModel.demandeId = getDemandeId();

		etapeDemandeCacheModel.decription = getDecription();

		String decription = etapeDemandeCacheModel.decription;

		if ((decription != null) && (decription.length() == 0)) {
			etapeDemandeCacheModel.decription = null;
		}

		etapeDemandeCacheModel.order = getOrder();

		return etapeDemandeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{etapeId=");
		sb.append(getEtapeId());
		sb.append(", demandeId=");
		sb.append(getDemandeId());
		sb.append(", decription=");
		sb.append(getDecription());
		sb.append(", order=");
		sb.append(getOrder());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.viapost.stock.model.EtapeDemande");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>etapeId</column-name><column-value><![CDATA[");
		sb.append(getEtapeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>demandeId</column-name><column-value><![CDATA[");
		sb.append(getDemandeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>decription</column-name><column-value><![CDATA[");
		sb.append(getDecription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>order</column-name><column-value><![CDATA[");
		sb.append(getOrder());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EtapeDemande.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			EtapeDemande.class
		};
	private long _etapeId;
	private long _demandeId;
	private long _originalDemandeId;
	private boolean _setOriginalDemandeId;
	private String _decription;
	private long _order;
	private long _columnBitmask;
	private EtapeDemande _escapedModel;
}