/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.viapost.stock.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.viapost.stock.model.Demande;
import com.viapost.stock.model.DemandeModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Demande service. Represents a row in the &quot;Viapost_Demande&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.viapost.stock.model.DemandeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DemandeImpl}.
 * </p>
 *
 * @author pif
 * @see DemandeImpl
 * @see com.viapost.stock.model.Demande
 * @see com.viapost.stock.model.DemandeModel
 * @generated
 */
public class DemandeModelImpl extends BaseModelImpl<Demande>
	implements DemandeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a demande model instance should use the {@link com.viapost.stock.model.Demande} interface instead.
	 */
	public static final String TABLE_NAME = "Viapost_Demande";
	public static final Object[][] TABLE_COLUMNS = {
			{ "demandeId", Types.BIGINT },
			{ "question", Types.VARCHAR },
			{ "request", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table Viapost_Demande (demandeId LONG not null primary key,question VARCHAR(75) null,request VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table Viapost_Demande";
	public static final String ORDER_BY_JPQL = " ORDER BY demande.demandeId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Viapost_Demande.demandeId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.viapost.stock.model.Demande"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.viapost.stock.model.Demande"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.viapost.stock.model.Demande"),
			true);
	public static long QUESTION_COLUMN_BITMASK = 1L;
	public static long DEMANDEID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.viapost.stock.model.Demande"));

	public DemandeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _demandeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setDemandeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _demandeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Demande.class;
	}

	@Override
	public String getModelClassName() {
		return Demande.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("demandeId", getDemandeId());
		attributes.put("question", getQuestion());
		attributes.put("request", getRequest());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long demandeId = (Long)attributes.get("demandeId");

		if (demandeId != null) {
			setDemandeId(demandeId);
		}

		String question = (String)attributes.get("question");

		if (question != null) {
			setQuestion(question);
		}

		String request = (String)attributes.get("request");

		if (request != null) {
			setRequest(request);
		}
	}

	@Override
	public long getDemandeId() {
		return _demandeId;
	}

	@Override
	public void setDemandeId(long demandeId) {
		_demandeId = demandeId;
	}

	@Override
	public String getQuestion() {
		if (_question == null) {
			return StringPool.BLANK;
		}
		else {
			return _question;
		}
	}

	@Override
	public void setQuestion(String question) {
		_columnBitmask |= QUESTION_COLUMN_BITMASK;

		if (_originalQuestion == null) {
			_originalQuestion = _question;
		}

		_question = question;
	}

	public String getOriginalQuestion() {
		return GetterUtil.getString(_originalQuestion);
	}

	@Override
	public String getRequest() {
		if (_request == null) {
			return StringPool.BLANK;
		}
		else {
			return _request;
		}
	}

	@Override
	public void setRequest(String request) {
		_request = request;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Demande.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Demande toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Demande)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		DemandeImpl demandeImpl = new DemandeImpl();

		demandeImpl.setDemandeId(getDemandeId());
		demandeImpl.setQuestion(getQuestion());
		demandeImpl.setRequest(getRequest());

		demandeImpl.resetOriginalValues();

		return demandeImpl;
	}

	@Override
	public int compareTo(Demande demande) {
		long primaryKey = demande.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Demande)) {
			return false;
		}

		Demande demande = (Demande)obj;

		long primaryKey = demande.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		DemandeModelImpl demandeModelImpl = this;

		demandeModelImpl._originalQuestion = demandeModelImpl._question;

		demandeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Demande> toCacheModel() {
		DemandeCacheModel demandeCacheModel = new DemandeCacheModel();

		demandeCacheModel.demandeId = getDemandeId();

		demandeCacheModel.question = getQuestion();

		String question = demandeCacheModel.question;

		if ((question != null) && (question.length() == 0)) {
			demandeCacheModel.question = null;
		}

		demandeCacheModel.request = getRequest();

		String request = demandeCacheModel.request;

		if ((request != null) && (request.length() == 0)) {
			demandeCacheModel.request = null;
		}

		return demandeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(7);

		sb.append("{demandeId=");
		sb.append(getDemandeId());
		sb.append(", question=");
		sb.append(getQuestion());
		sb.append(", request=");
		sb.append(getRequest());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(13);

		sb.append("<model><model-name>");
		sb.append("com.viapost.stock.model.Demande");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>demandeId</column-name><column-value><![CDATA[");
		sb.append(getDemandeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>question</column-name><column-value><![CDATA[");
		sb.append(getQuestion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>request</column-name><column-value><![CDATA[");
		sb.append(getRequest());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Demande.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Demande.class
		};
	private long _demandeId;
	private String _question;
	private String _originalQuestion;
	private String _request;
	private long _columnBitmask;
	private Demande _escapedModel;
}